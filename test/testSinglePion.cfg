process PROD  = 
{


   #The module which reade from a HepMC ASCII file
#   source = MCFileSource
#   {
#      # The HepMC test File
#      untracked vstring fileNames = {"SherpaWriteHepMC.dat"}
#      untracked int32 maxEvents = 10
#   }
                 
	service =  RandomNumberGeneratorService {
		untracked uint32 sourceSeed = 123456789
# This is to initialize the random engine of Famos
# Watch out! This works only if the FamosProducer label is "Famos"
                PSet moduleSeeds =
                  {
#                    untracked uint32 VtxSmeared = 123456789
                     untracked uint32 famosSimHits = 13579
                     untracked uint32 siTrackerGaussianSmearingRecHits = 24680
                  }
	}

service = DaqMonitorROOTBackEnd{}		

	
source = FlatRandomEGunSource 
   {	 
      untracked uint32 firstRun  = 1
      untracked int32  maxEvents = 100000
      untracked      PSet  PGunParameters =
      {
	 # you can request more than 1 particle
	 #untracked vint32  PartID = { 211, 11, -13 }
	  untracked vint32 PartID = {211} 
	  untracked double MinEta = -3.0
	  untracked double MaxEta = 3.0
	  untracked double MinPhi = -3.14159265358979323846  # it must be in radians
	  untracked double MaxPhi =  3.14159265358979323846
	  untracked double MinE   = 15.
	  untracked double MaxE   = 15.
      }      
      untracked int32 Verbosity = 0 # for printouts, set it to 1 (or greater)   
   }

  # Primary vertex smearing.
#  include "IOMC/EventVertexGenerators/data/VtxSmearedGauss.cfi"


   # The particle data table
   include "SimGeneral/HepPDTESSource/data/pythiapdt.cfi"

   #Geometry
   include "Geometry/CMSCommonData/data/cmsSimIdealGeometryXML.cfi"

   #Tracker geometry
   es_module = TrackerGeometricDetESModule {}
   include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
   include "RecoTracker/GeometryESProducer/data/TrackerRecoGeometryESProducer.cfi"

   #Magnetic Field
   #
   include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

   # Calo geometry service model
   include "Geometry/CaloEventSetup/data/CaloGeometry.cfi"
   include "Geometry/CaloEventSetup/data/CaloTopology.cfi"		

#   module o1 = PoolOutputModule { untracked string fileName = "test.root" }

   # Famos SimHits 
   include "FastSimulation/EventProducer/data/FamosSimHits.cfi"
   replace famosSimHits.SimulateCalorimetry = false
   replace famosSimHits.SimulateTracking = false
   replace famosSimHits.SimulatePileUp = false
   #replace famosSimHits.MaterialEffects.NuclearInteraction=false
   #replace famosSimHits.MaterialEffects.NuclearInteractionEDM=true
   #replace famosSimHits.MaterialEffects.pionEnergies={5.,10.,15.}

# Mixing module 
   module mix = MixingModule   {
	int32 bunchspace = 25
   }   

# Gaussian Smearing RecHit producer
#   module TrackerGSRecHits = SiTrackerGaussianSmearingRecHitConverter 
#   {
        include "FastSimulation/TrackingRecHitProducer/data/SiTrackerGaussianSmearingRecHitConverter.cfi"
#    	replace SiTrackerGaussianSmearingRecHit.RecHits={"trackerRecHits"}
#   }


service = Timing { }
service = SimpleProfiling { }

    path p1 = { famosSimHits }	
#    path p1 = { famosSimHits, mix, siTrackerGaussianSmearingRecHits }	
#    path p1 = { VtxSmeared, Famos, mix, siTrackerGaussianSmearingRecHits}	
#    endpath outpath = { o1 }

# Keep the logging output to a nice level #
include "FWCore/MessageService/data/MessageLogger.cfi"
replace MessageLogger.destinations = {"detailedInfo.txt"}

}		
